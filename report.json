{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":16,"numPassedTests":171,"numPendingTestSuites":1,"numPendingTests":2,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":17,"numTotalTests":173,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1731597757992,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["deployScoutTokenERC20"],"duration":137,"failureDetails":[],"failureMessages":[],"fullName":"deployScoutTokenERC20 should deploy the weekly vesting contract, with functional vesting","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should deploy the weekly vesting contract, with functional vesting"}],"endTime":1731597764863,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/utils/deployWeeklyVesting.spec.ts","startTime":1731597758146,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Proxy and Initialization"],"duration":1466,"failureDetails":[],"failureMessages":[],"fullName":"Proxy and Initialization Should set the correct admin and implementation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Should set the correct admin and implementation"}],"endTime":1731597765514,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/utils/deployProtocolContract.spec.ts","startTime":1731597758148,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["deployScoutTokenERC20"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"deployScoutTokenERC20 should deploy the ProtocolERC20 contract, with minting, approve, transfer, balanceOf and transferFrom enabled, as well as a starting balance of 1 million tokens for the admin","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should deploy the ProtocolERC20 contract, with minting, approve, transfer, balanceOf and transferFrom enabled, as well as a starting balance of 1 million tokens for the admin"}],"endTime":1731597766327,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/utils/deployScoutTokenERC20.spec.ts","startTime":1731597764872,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MemoryUtils","IMPLEMENTATION_SLOT","returns"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils IMPLEMENTATION_SLOT returns the correct value, compliant with EIP 1967","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value, compliant with EIP 1967"},{"ancestorTitles":["MemoryUtils","PROCEEDS_RECEIVER_SLOT","returns"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils PROCEEDS_RECEIVER_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","CLAIMS_TOKEN_SLOT","returns"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils CLAIMS_TOKEN_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","MINTER_SLOT","returns"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils MINTER_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","CLAIMS_HISTORY_SLOT","returns"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils CLAIMS_HISTORY_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","MERKLE_ROOTS_SLOT","returns"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils MERKLE_ROOTS_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","ADMIN_SLOT","returns"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils ADMIN_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","PAUSER_SLOT","returns"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils PAUSER_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","CLAIM_MANAGER_SLOT","returns"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils CLAIM_MANAGER_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","EAS_ATTESTER_SLOT","returns"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils EAS_ATTESTER_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","SECONDARY_EAS_ATTESTER_SLOT","returns"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils SECONDARY_EAS_ATTESTER_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"},{"ancestorTitles":["MemoryUtils","IS_PAUSED_SLOT","returns"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MemoryUtils IS_PAUSED_SLOT returns the correct value","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"the correct value"}],"endTime":1731597766493,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/contracts/Protocol/MemoryUtils/read.spec.ts","startTime":1731597765517,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["deployEAS"],"duration":942,"failureDetails":[],"failureMessages":[],"fullName":"deployEAS should deploy EAS contract along with the builder event schema and Protocol Resolver","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should deploy EAS contract along with the builder event schema and Protocol Resolver"}],"endTime":1731597767515,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/utils/deployEAS.spec.ts","startTime":1731597766329,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Proxy and Initialization"],"duration":818,"failureDetails":[],"failureMessages":[],"fullName":"Proxy and Initialization Should set the correct admin, implementation, and payment token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Should set the correct admin, implementation, and payment token"}],"endTime":1731597767559,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/utils/deployBuilderNftSeason02Contract.spec.ts","startTime":1731597766500,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["balanceOf()"],"duration":1619,"failureDetails":[],"failureMessages":[],"fullName":"balanceOf() Returns the correct balance of tokens for an account and tokenId","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns the correct balance of tokens for an account and tokenId"},{"ancestorTitles":["balanceOf()"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"balanceOf() Returns zero for accounts with no tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns zero for accounts with no tokens"},{"ancestorTitles":["balanceOfBatch()"],"duration":41,"failureDetails":[],"failureMessages":[],"fullName":"balanceOfBatch() Returns correct balances for multiple accounts and tokenIds","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Returns correct balances for multiple accounts and tokenIds"},{"ancestorTitles":["balanceOfBatch()"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"balanceOfBatch() Returns zeros for accounts with no tokens","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Returns zeros for accounts with no tokens"},{"ancestorTitles":["getERC20ContractV2()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"getERC20ContractV2() Returns the address of USDC contract","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns the address of USDC contract"},{"ancestorTitles":["getTokenPurchasePrice()"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"getTokenPurchasePrice() Returns the correct price for purchasing a given amount of tokens, taking into account current supply and bonding curve formula of 2S + 2","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"Returns the correct price for purchasing a given amount of tokens, taking into account current supply and bonding curve formula of 2S + 2"},{"ancestorTitles":["totalSupply()"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"totalSupply() Returns the total supply of a given tokenId","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns the total supply of a given tokenId"},{"ancestorTitles":["totalSupply()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"totalSupply() Returns zero for tokens with no supply","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns zero for tokens with no supply"},{"ancestorTitles":["getBuilderIdForToken()"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"getBuilderIdForToken() Returns the correct builderId for a given tokenId","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns the correct builderId for a given tokenId"},{"ancestorTitles":["getBuilderIdForToken()"],"duration":1078,"failureDetails":[],"failureMessages":[],"fullName":"getBuilderIdForToken() Reverts if the tokenId is not registered","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts if the tokenId is not registered"},{"ancestorTitles":["getTokenIdForBuilder()"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"getTokenIdForBuilder() Returns the correct tokenId for a given builderId","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns the correct tokenId for a given builderId"},{"ancestorTitles":["getTokenIdForBuilder()"],"duration":1067,"failureDetails":[],"failureMessages":[],"fullName":"getTokenIdForBuilder() Reverts if the builderId is not registered","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts if the builderId is not registered"},{"ancestorTitles":["totalBuilderTokens()"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"totalBuilderTokens() Returns the total number of registered builder tokens","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Returns the total number of registered builder tokens"},{"ancestorTitles":["getPriceIncrement()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"getPriceIncrement() Returns the price increment used for calculating token prices","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns the price increment used for calculating token prices"},{"ancestorTitles":["uri()"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"uri() Returns the correct URI for a given tokenId","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns the correct URI for a given tokenId"},{"ancestorTitles":["tokenURI()"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"tokenURI() Returns the correct token URI for a given tokenId","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns the correct token URI for a given tokenId"},{"ancestorTitles":["isValidUUID()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"isValidUUID() Returns true for valid UUIDs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns true for valid UUIDs"},{"ancestorTitles":["isValidUUID()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"isValidUUID() Returns false for invalid UUIDs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Returns false for invalid UUIDs"},{"ancestorTitles":["read","getMinter()"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"read getMinter() Should return the correct minter address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should return the correct minter address"}],"endTime":1731597767760,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/contracts/BuilderNFTImplementation/read.spec.ts","startTime":1731597758146,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Proxy and Initialization"],"duration":834,"failureDetails":[],"failureMessages":[],"fullName":"Proxy and Initialization Should set the correct admin, implementation, and payment token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Should set the correct admin, implementation, and payment token"}],"endTime":1731597768599,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/utils/deployBuilderNftContract.spec.ts","startTime":1731597767518,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["generateTestReport"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"generateTestReport should generate a test report","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should generate a test report"}],"coverage":{},"endTime":1731597786369,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/utils/generateTestReport.spec.ts","startTime":1731597786369,"status":"skipped","summary":""},{"assertionResults":[{"ancestorTitles":["generateWallets"],"duration":977,"failureDetails":[],"failureMessages":[],"fullName":"generateWallets should generate an admin wallet and 3 user wallets","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should generate an admin wallet and 3 user wallets"},{"ancestorTitles":["generateWallets"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"generateWallets should generate a different set of addresses each time it is called","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate a different set of addresses each time it is called"}],"endTime":1731597768786,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/utils/testUtils.spec.ts","startTime":1731597767561,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["deployUsdc"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"deployUsdc should deploy the USDC contract, with minting, approve, transfer, balanceOf and transferFrom enabled","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should deploy the USDC contract, with minting, approve, transfer, balanceOf and transferFrom enabled"}],"endTime":1731597768890,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/utils/deployUsdc.spec.ts","startTime":1731597767765,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["constructor"],"duration":1361,"failureDetails":[],"failureMessages":[],"fullName":"constructor Should set the correct admin, implementation, and payment token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Should set the correct admin, implementation, and payment token"},{"ancestorTitles":["write","setImplementation()","effects"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"write setImplementation() effects Should allow the admin to change the implementation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should allow the admin to change the implementation"},{"ancestorTitles":["write","setImplementation()","effects"],"duration":42,"failureDetails":[],"failureMessages":[],"fullName":"write setImplementation() effects Should preserve state between implementation changes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should preserve state between implementation changes"},{"ancestorTitles":["write","setImplementation()","permissions"],"duration":1152,"failureDetails":[],"failureMessages":[],"fullName":"write setImplementation() permissions Should deny another user than the admin to change the implementation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should deny another user than the admin to change the implementation"},{"ancestorTitles":["write","setProceedsReceiver()","effects"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"write setProceedsReceiver() effects Should set the proceeds receiver address correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should set the proceeds receiver address correctly"},{"ancestorTitles":["write","setProceedsReceiver()","permissions"],"duration":1062,"failureDetails":[],"failureMessages":[],"fullName":"write setProceedsReceiver() permissions Only admin can set the proceeds receiver","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Only admin can set the proceeds receiver"},{"ancestorTitles":["write","setProceedsReceiver()","validations"],"duration":1065,"failureDetails":[],"failureMessages":[],"fullName":"write setProceedsReceiver() validations Reverts when setting proceeds receiver to zero address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts when setting proceeds receiver to zero address"},{"ancestorTitles":["write","updatePriceIncrement()","effects"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"write updatePriceIncrement() effects Should update the price increment correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should update the price increment correctly"},{"ancestorTitles":["write","updatePriceIncrement()","permissions"],"duration":1073,"failureDetails":[],"failureMessages":[],"fullName":"write updatePriceIncrement() permissions Only admin can update the price increment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Only admin can update the price increment"},{"ancestorTitles":["write","updateERC20Contract()","effects"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"write updateERC20Contract() effects Should update the ERC20 contract address correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should update the ERC20 contract address correctly"},{"ancestorTitles":["write","updateERC20Contract()","permissions"],"duration":1091,"failureDetails":[],"failureMessages":[],"fullName":"write updateERC20Contract() permissions Only admin can update the ERC20 contract address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Only admin can update the ERC20 contract address"},{"ancestorTitles":["write","updateERC20Contract()","validations"],"duration":1064,"failureDetails":[],"failureMessages":[],"fullName":"write updateERC20Contract() validations Reverts when setting ERC20 contract to zero address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts when setting ERC20 contract to zero address"},{"ancestorTitles":["read","getProceedsReceiver()"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"read getProceedsReceiver() Should return the correct proceeds receiver address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should return the correct proceeds receiver address"},{"ancestorTitles":["read","getPriceIncrement()"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"read getPriceIncrement() Should return the correct price increment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should return the correct price increment"},{"ancestorTitles":["read","getERC20Contract()"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"read getERC20Contract() Should return the correct ERC20 contract address","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"Should return the correct ERC20 contract address"}],"endTime":1731597771281,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/contracts/BuilderNFTSeasonOneUpgradeable.spec.ts","startTime":1731597758146,"status":"focused","summary":""},{"assertionResults":[{"ancestorTitles":["ProtocolEASResolver","setAttesterWallet","effects"],"duration":1604,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver setAttesterWallet effects updates the attester wallet correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"updates the attester wallet correctly"},{"ancestorTitles":["ProtocolEASResolver","setAttesterWallet","permissions"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver setAttesterWallet permissions allows authorized users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allows authorized users"},{"ancestorTitles":["ProtocolEASResolver","setAttesterWallet","permissions"],"duration":1094,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver setAttesterWallet permissions denies unauthorized users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"denies unauthorized users"},{"ancestorTitles":["ProtocolEASResolver","setAttesterWallet","validations"],"duration":1066,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver setAttesterWallet validations reverts when input is invalid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when input is invalid"},{"ancestorTitles":["ProtocolEASResolver","rolloverAttesterWallet","effects"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver rolloverAttesterWallet effects updates the attester wallets correctly and sets the current attester as secondary attester","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"updates the attester wallets correctly and sets the current attester as secondary attester"},{"ancestorTitles":["ProtocolEASResolver","rolloverAttesterWallet","permissions"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver rolloverAttesterWallet permissions allows authorized users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allows authorized users"},{"ancestorTitles":["ProtocolEASResolver","rolloverAttesterWallet","permissions"],"duration":1067,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver rolloverAttesterWallet permissions denies unauthorized users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"denies unauthorized users"},{"ancestorTitles":["ProtocolEASResolver","rolloverAttesterWallet","validations"],"duration":1069,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver rolloverAttesterWallet validations reverts when input is invalid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when input is invalid"},{"ancestorTitles":["ProtocolEASResolver","transferAdmin","effects"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver transferAdmin effects updates the admin correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"updates the admin correctly"},{"ancestorTitles":["ProtocolEASResolver","transferAdmin","permissions"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver transferAdmin permissions allows authorized users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allows authorized users"},{"ancestorTitles":["ProtocolEASResolver","transferAdmin","permissions"],"duration":1068,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver transferAdmin permissions denies unauthorized users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"denies unauthorized users"},{"ancestorTitles":["ProtocolEASResolver","transferAdmin","validations"],"duration":1074,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver transferAdmin validations reverts when input is invalid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when input is invalid"},{"ancestorTitles":["ProtocolEASResolver","onAttest","validations"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver onAttest validations allows the attester wallet to attest","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allows the attester wallet to attest"},{"ancestorTitles":["ProtocolEASResolver","onAttest","validations"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolEASResolver onAttest validations prevents other wallets than the attester wallet from attesting","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"prevents other wallets than the attester wallet from attesting"}],"endTime":1731597771865,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/contracts/Protocol/ProtocolEASResolver/write.spec.ts","startTime":1731597758149,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ScoutProtocolImplementation","claim","effects"],"duration":114,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation claim effects allows a user to claim tokens correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"allows a user to claim tokens correctly"},{"ancestorTitles":["ScoutProtocolImplementation","claim","permissions"],"duration":1092,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation claim permissions reverts when the contract is paused","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when the contract is paused"},{"ancestorTitles":["ScoutProtocolImplementation","claim","validations"],"duration":1074,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation claim validations denies claims if user has already claimed","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"denies claims if user has already claimed"},{"ancestorTitles":["ScoutProtocolImplementation","claim","validations"],"duration":1076,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation claim validations reverts with invalid merkle proof","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts with invalid merkle proof"},{"ancestorTitles":["ScoutProtocolImplementation","claim","validations"],"duration":1070,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation claim validations reverts when merkle root is not set","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when merkle root is not set"},{"ancestorTitles":["ScoutProtocolImplementation","claim","validations"],"duration":1068,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation claim validations reverts when contract balance is insufficient","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when contract balance is insufficient"},{"ancestorTitles":["ScoutProtocolImplementation","setMerkleRoot","effects"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation setMerkleRoot effects allows admin to set merkle root correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allows admin to set merkle root correctly"},{"ancestorTitles":["ScoutProtocolImplementation","setMerkleRoot","permissions"],"duration":1081,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation setMerkleRoot permissions reverts when the contract is paused","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when the contract is paused"},{"ancestorTitles":["ScoutProtocolImplementation","setMerkleRoot","permissions"],"duration":1070,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation setMerkleRoot permissions reverts when not called by admin","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when not called by admin"},{"ancestorTitles":["ScoutProtocolImplementation","setMerkleRoot","permissions"],"duration":80,"failureDetails":[],"failureMessages":[],"fullName":"ScoutProtocolImplementation setMerkleRoot permissions allows the claims manager to set the merkle root","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allows the claims manager to set the merkle root"}],"endTime":1731597773116,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/contracts/Protocol/ScoutProtocolImplementation/write.spec.ts","startTime":1731597758146,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ProtocolAccessControl","transferAdmin","effects"],"duration":2411,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl transferAdmin effects allows admin to transfer admin","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"allows admin to transfer admin"},{"ancestorTitles":["ProtocolAccessControl","transferAdmin","permissions"],"duration":1078,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl transferAdmin permissions reverts when not called by admin","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when not called by admin"},{"ancestorTitles":["ProtocolAccessControl","transferAdmin","validations"],"duration":1072,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl transferAdmin validations reverts when setting to zero address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when setting to zero address"},{"ancestorTitles":["ProtocolAccessControl","setRole","effects"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl setRole effects sets a role to a new account","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"sets a role to a new account"},{"ancestorTitles":["ProtocolAccessControl","setRole","events"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl setRole events emits a RoleTransferred event with roleName, previous and new holder if the new holder is different from the previous one","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"emits a RoleTransferred event with roleName, previous and new holder if the new holder is different from the previous one"},{"ancestorTitles":["ProtocolAccessControl","setRole","validations"],"duration":1076,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl setRole validations reverts when setting to zero address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when setting to zero address"},{"ancestorTitles":["ProtocolAccessControl","pause","effects"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl pause effects marks the contract as paused","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"marks the contract as paused"},{"ancestorTitles":["ProtocolAccessControl","pause","permissions"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl pause permissions can be paused by the pauser role ","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"can be paused by the pauser role "},{"ancestorTitles":["ProtocolAccessControl","pause","permissions"],"duration":1069,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl pause permissions reverts when called by non-pauser and non-admin","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when called by non-pauser and non-admin"},{"ancestorTitles":["ProtocolAccessControl","pause","events"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl pause events emits Paused event when paused","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"emits Paused event when paused"},{"ancestorTitles":["ProtocolAccessControl","unPause","effects"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl unPause effects allows admin to unpause the contract","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allows admin to unpause the contract"},{"ancestorTitles":["ProtocolAccessControl","unPause","permissions"],"duration":1075,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl unPause permissions reverts when called by non-admin","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when called by non-admin"},{"ancestorTitles":["ProtocolAccessControl","unPause","events"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl unPause events emits Unpaused event when unpaused","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"emits Unpaused event when unpaused"},{"ancestorTitles":["ProtocolAccessControl","testPaused"],"duration":1079,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl testPaused reverts when the contract is paused","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when the contract is paused"},{"ancestorTitles":["ProtocolAccessControl","testPaused"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl testPaused succeeds when the contract is not paused","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"succeeds when the contract is not paused"},{"ancestorTitles":["ProtocolAccessControl","setPauser","effects"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl setPauser effects allows admin to set a new pauser","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allows admin to set a new pauser"},{"ancestorTitles":["ProtocolAccessControl","setPauser","permissions"],"duration":1071,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl setPauser permissions reverts when not called by admin","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when not called by admin"},{"ancestorTitles":["ProtocolAccessControl","setPauser","validations"],"duration":1071,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl setPauser validations reverts when setting to zero address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"reverts when setting to zero address"},{"ancestorTitles":["ProtocolAccessControl","setPauser","events"],"duration":46,"failureDetails":[],"failureMessages":[],"fullName":"ProtocolAccessControl setPauser events emits a RoleTransferred event when pauser is changed","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"emits a RoleTransferred event when pauser is changed"}],"endTime":1731597774533,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/contracts/Protocol/ProtocolAccessControl/write.spec.ts","startTime":1731597758146,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["BuilderNFTSeason02Implementation","registerBuilderToken()","effects"],"duration":1531,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation registerBuilderToken() effects Register a new builder token using a builderId","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Register a new builder token using a builderId"},{"ancestorTitles":["BuilderNFTSeason02Implementation","registerBuilderToken()","events"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation registerBuilderToken() events Emits BuilderTokenRegistered event new tokenId and builderId","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Emits BuilderTokenRegistered event new tokenId and builderId"},{"ancestorTitles":["BuilderNFTSeason02Implementation","registerBuilderToken()","permissions"],"duration":1104,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation registerBuilderToken() permissions Normal users cannot register a builder token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Normal users cannot register a builder token"},{"ancestorTitles":["BuilderNFTSeason02Implementation","registerBuilderToken()","permissions"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation registerBuilderToken() permissions Minter can register a builder token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Minter can register a builder token"},{"ancestorTitles":["BuilderNFTSeason02Implementation","registerBuilderToken()","validations"],"duration":1070,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation registerBuilderToken() validations Revert if the builderId is already registered","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Revert if the builderId is already registered"},{"ancestorTitles":["BuilderNFTSeason02Implementation","registerBuilderToken()","validations"],"duration":1068,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation registerBuilderToken() validations Revert if the builderId is empty","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Revert if the builderId is empty"},{"ancestorTitles":["BuilderNFTSeason02Implementation","registerBuilderToken()","validations"],"duration":2131,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation registerBuilderToken() validations Revert if the builderId is an invalid uuid","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Revert if the builderId is an invalid uuid"},{"ancestorTitles":["BuilderNFTSeason02Implementation","mint()","effects"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation mint() effects Mints tokens to a user account","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Mints tokens to a user account"},{"ancestorTitles":["BuilderNFTSeason02Implementation","mint()","effects"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation mint() effects Increments total supply of the token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Increments total supply of the token"},{"ancestorTitles":["BuilderNFTSeason02Implementation","mint()","events"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation mint() events Emits TransferSingle and BuilderScouted events on mint","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"Emits TransferSingle and BuilderScouted events on mint"},{"ancestorTitles":["BuilderNFTSeason02Implementation","mint()","permissions"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation mint() permissions Allows any user to mint tokens if they pay the price","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Allows any user to mint tokens if they pay the price"},{"ancestorTitles":["BuilderNFTSeason02Implementation","mint()","validations"],"duration":1074,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation mint() validations Reverts if tokenId is not registered","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts if tokenId is not registered"},{"ancestorTitles":["BuilderNFTSeason02Implementation","burn()","effects"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation burn() effects Burns tokens from a user account","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Burns tokens from a user account"},{"ancestorTitles":["BuilderNFTSeason02Implementation","burn()","effects"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation burn() effects Decrements total supply of the token","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Decrements total supply of the token"},{"ancestorTitles":["BuilderNFTSeason02Implementation","burn()","events"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation burn() events Emits TransferSingle event on burn","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"Emits TransferSingle event on burn"},{"ancestorTitles":["BuilderNFTSeason02Implementation","burn()","permissions"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation burn() permissions Allows token owner to burn tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Allows token owner to burn tokens"},{"ancestorTitles":["BuilderNFTSeason02Implementation","burn()","permissions"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation burn() permissions Allows approved operator to burn tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Allows approved operator to burn tokens"},{"ancestorTitles":["BuilderNFTSeason02Implementation","burn()","permissions"],"duration":1081,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation burn() permissions Prevents burning tokens if not owner nor approved","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Prevents burning tokens if not owner nor approved"},{"ancestorTitles":["BuilderNFTSeason02Implementation","burn()","validations"],"duration":1093,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation burn() validations Reverts if burning more tokens than balance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts if burning more tokens than balance"},{"ancestorTitles":["BuilderNFTSeason02Implementation","setApprovalForAll()","effects"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation setApprovalForAll() effects Sets operator approval for the caller","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Sets operator approval for the caller"},{"ancestorTitles":["BuilderNFTSeason02Implementation","setApprovalForAll()","events"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation setApprovalForAll() events Emits ApprovalForAll event","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Emits ApprovalForAll event"},{"ancestorTitles":["BuilderNFTSeason02Implementation","setApprovalForAll()","permissions"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation setApprovalForAll() permissions Allows any user to set operator approval","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Allows any user to set operator approval"},{"ancestorTitles":["BuilderNFTSeason02Implementation","setApprovalForAll()","validations"],"duration":1074,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation setApprovalForAll() validations Reverts if setting approval for self","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts if setting approval for self"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeTransferFrom()","effects"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeTransferFrom() effects Transfers tokens from one account to another","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Transfers tokens from one account to another"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeTransferFrom()","events"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeTransferFrom() events Emits TransferSingle event on transfer","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"Emits TransferSingle event on transfer"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeTransferFrom()","permissions"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeTransferFrom() permissions Allows token owner to transfer tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Allows token owner to transfer tokens"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeTransferFrom()","permissions"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeTransferFrom() permissions Allows approved operator to transfer tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Allows approved operator to transfer tokens"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeTransferFrom()","permissions"],"duration":1079,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeTransferFrom() permissions Prevents transferring tokens if not owner nor approved","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Prevents transferring tokens if not owner nor approved"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeTransferFrom()","validations"],"duration":1071,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeTransferFrom() validations Reverts if caller is not owner nor approved","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts if caller is not owner nor approved"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeTransferFrom()","validations"],"duration":1084,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeTransferFrom() validations Reverts if transferring more tokens than balance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts if transferring more tokens than balance"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeBatchTransferFrom()","effects"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeBatchTransferFrom() effects Transfers multiple tokens from one account to another","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Transfers multiple tokens from one account to another"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeBatchTransferFrom()","events"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeBatchTransferFrom() events Emits TransferBatch event on transfer","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"Emits TransferBatch event on transfer"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeBatchTransferFrom()","permissions"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeBatchTransferFrom() permissions Allows token owner to transfer tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Allows token owner to transfer tokens"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeBatchTransferFrom()","permissions"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeBatchTransferFrom() permissions Allows approved operator to transfer tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Allows approved operator to transfer tokens"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeBatchTransferFrom()","permissions"],"duration":1096,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeBatchTransferFrom() permissions Prevents transferring tokens if not owner nor approved","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Prevents transferring tokens if not owner nor approved"},{"ancestorTitles":["BuilderNFTSeason02Implementation","safeBatchTransferFrom()","validations"],"duration":1114,"failureDetails":[],"failureMessages":[],"fullName":"BuilderNFTSeason02Implementation safeBatchTransferFrom() validations Reverts if transferring more tokens than balance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts if transferring more tokens than balance"}],"endTime":1731597780904,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/contracts/Protocol/BuilderNFTSeason02/BuilderNFTSeason02Implementation/write.spec.ts","startTime":1731597758146,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["registerBuilderToken()","effects"],"duration":1530,"failureDetails":[],"failureMessages":[],"fullName":"registerBuilderToken() effects Register a new builder token using a builderId","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Register a new builder token using a builderId"},{"ancestorTitles":["registerBuilderToken()","events"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"registerBuilderToken() events Emits BuilderTokenRegistered event new tokenId and builderId","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Emits BuilderTokenRegistered event new tokenId and builderId"},{"ancestorTitles":["registerBuilderToken()","permissions"],"duration":1095,"failureDetails":[],"failureMessages":[],"fullName":"registerBuilderToken() permissions Only admin can register a builder token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Only admin can register a builder token"},{"ancestorTitles":["registerBuilderToken()","validations"],"duration":1072,"failureDetails":[],"failureMessages":[],"fullName":"registerBuilderToken() validations Revert if the builderId is already registered","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Revert if the builderId is already registered"},{"ancestorTitles":["registerBuilderToken()","validations"],"duration":1062,"failureDetails":[],"failureMessages":[],"fullName":"registerBuilderToken() validations Revert if the builderId is empty","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Revert if the builderId is empty"},{"ancestorTitles":["registerBuilderToken()","validations"],"duration":1067,"failureDetails":[],"failureMessages":[],"fullName":"registerBuilderToken() validations Revert if the builderId is an invalid uuid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Revert if the builderId is an invalid uuid"},{"ancestorTitles":["mint()","effects"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"mint() effects Accept USDC and mint the requested amount of tokens for an NFT","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Accept USDC and mint the requested amount of tokens for an NFT"},{"ancestorTitles":["mint()","effects"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"mint() effects Forwards the full fees of the mint to the proceeds receiver","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Forwards the full fees of the mint to the proceeds receiver"},{"ancestorTitles":["mint()","events"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"mint() events Emits standard ERC1155 \"TransferSingle\" event","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"Emits standard ERC1155 \"TransferSingle\" event"},{"ancestorTitles":["mint()","events"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"mint() events Emits BuilderScouted event with tokenId (number), amount of tokens purchased (), and scoutId (uuid)","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Emits BuilderScouted event with tokenId (number), amount of tokens purchased (), and scoutId (uuid)"},{"ancestorTitles":["mint()","permissions"],"duration":1100,"failureDetails":[],"failureMessages":[],"fullName":"mint() permissions Should revert if the caller has not provided USDC allowance to the contract","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should revert if the caller has not provided USDC allowance to the contract"},{"ancestorTitles":["mint()","validations"],"duration":1084,"failureDetails":[],"failureMessages":[],"fullName":"mint() validations Revert if the caller's USDC balance is insufficent","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Revert if the caller's USDC balance is insufficent"},{"ancestorTitles":["setBaseUri()","effects"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"setBaseUri() effects Updates the base URI when called with a valid newBaseUri","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Updates the base URI when called with a valid newBaseUri"},{"ancestorTitles":["setBaseUri()","permissions"],"duration":1070,"failureDetails":[],"failureMessages":[],"fullName":"setBaseUri() permissions Only admin can set the base URI","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Only admin can set the base URI"},{"ancestorTitles":["setBaseUri()","validations"],"duration":1087,"failureDetails":[],"failureMessages":[],"fullName":"setBaseUri() validations Reverts when called with an empty newBaseUri","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts when called with an empty newBaseUri"},{"ancestorTitles":["burn()","effects"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"burn() effects Burns the specified amount of tokens from the account, updating holder balance and total supply of a tokenID","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Burns the specified amount of tokens from the account, updating holder balance and total supply of a tokenID"},{"ancestorTitles":["burn()","events"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"burn() events Emits TransferSingle event with correct parameters when burning tokens","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"Emits TransferSingle event with correct parameters when burning tokens"},{"ancestorTitles":["burn()","permissions"],"duration":1091,"failureDetails":[],"failureMessages":[],"fullName":"burn() permissions Only admin can burn tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Only admin can burn tokens"},{"ancestorTitles":["burn()","validations"],"duration":1091,"failureDetails":[],"failureMessages":[],"fullName":"burn() validations Reverts when trying to burn more tokens than the account has","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts when trying to burn more tokens than the account has"},{"ancestorTitles":["mintTo()","effects"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"mintTo() effects Mints tokens to the specified account","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Mints tokens to the specified account"},{"ancestorTitles":["mintTo()","events"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"mintTo() events Emits TransferSingle event with correct parameters","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"Emits TransferSingle event with correct parameters"},{"ancestorTitles":["mintTo()","events"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"mintTo() events Emits BuilderScouted event with correct parameters","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Emits BuilderScouted event with correct parameters"},{"ancestorTitles":["mintTo()","permissions"],"duration":1074,"failureDetails":[],"failureMessages":[],"fullName":"mintTo() permissions Admin can mint tokens to an account","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Admin can mint tokens to an account"},{"ancestorTitles":["mintTo()","permissions"],"duration":33,"failureDetails":[],"failureMessages":[],"fullName":"mintTo() permissions Minter can mint tokens to an account","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Minter can mint tokens to an account"},{"ancestorTitles":["mintTo()","validations"],"duration":1078,"failureDetails":[],"failureMessages":[],"fullName":"mintTo() validations Reverts when called with an invalid scout UUID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts when called with an invalid scout UUID"},{"ancestorTitles":["setUriPrefix()","effects"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"setUriPrefix() effects Updates the URI prefix when called with a valid newPrefix","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Updates the URI prefix when called with a valid newPrefix"},{"ancestorTitles":["setUriPrefix()","permissions"],"duration":1083,"failureDetails":[],"failureMessages":[],"fullName":"setUriPrefix() permissions Only admin can set the URI prefix","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Only admin can set the URI prefix"},{"ancestorTitles":["setUriPrefix()","validations"],"duration":1077,"failureDetails":[],"failureMessages":[],"fullName":"setUriPrefix() validations Reverts when called with an empty newPrefix","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Reverts when called with an empty newPrefix"},{"ancestorTitles":["setUriSuffix()","effects"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"setUriSuffix() effects Updates the URI suffix when called with a valid newSuffix","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Updates the URI suffix when called with a valid newSuffix"},{"ancestorTitles":["setUriSuffix()","permissions"],"duration":1084,"failureDetails":[],"failureMessages":[],"fullName":"setUriSuffix() permissions Only admin can set the URI suffix","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Only admin can set the URI suffix"},{"ancestorTitles":["setUriSuffix()","validations"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"setUriSuffix() validations Allows setting an empty URI suffix","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Allows setting an empty URI suffix"},{"ancestorTitles":["setUriPrefixAndSuffix()","effects"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"setUriPrefixAndSuffix() effects Updates both URI prefix and suffix when called with valid values","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Updates both URI prefix and suffix when called with valid values"},{"ancestorTitles":["setUriPrefixAndSuffix()","permissions"],"duration":1090,"failureDetails":[],"failureMessages":[],"fullName":"setUriPrefixAndSuffix() permissions Only admin can set both URI prefix and suffix","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Only admin can set both URI prefix and suffix"},{"ancestorTitles":["setUriPrefixAndSuffix()","validations"],"duration":1083,"failureDetails":[],"failureMessages":[],"fullName":"setUriPrefixAndSuffix() validations Reverts when called with an empty newPrefix","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Reverts when called with an empty newPrefix"},{"ancestorTitles":["setUriPrefixAndSuffix()","validations"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"setUriPrefixAndSuffix() validations Allows setting an empty URI suffix","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Allows setting an empty URI suffix"},{"ancestorTitles":["setMinter()","effects"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"setMinter() effects Should set the minter address correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Should set the minter address correctly"},{"ancestorTitles":["setMinter()","permissions"],"duration":1084,"failureDetails":[],"failureMessages":[],"fullName":"setMinter() permissions Only admin can set the minter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Only admin can set the minter"},{"ancestorTitles":["setMinter()","validations"],"duration":1089,"failureDetails":[],"failureMessages":[],"fullName":"setMinter() validations Reverts when setting minter to zero address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reverts when setting minter to zero address"}],"endTime":1731597786253,"message":"","name":"/Users/mo/Products/charmverse/scout-protocol/__test__/contracts/BuilderNFTImplementation/write.spec.ts","startTime":1731597758146,"status":"passed","summary":""}],"wasInterrupted":false}
